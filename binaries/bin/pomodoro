#! /opt/local/bin/python

import curses
import sys
import time

font = {
    "0": [
        r"  /\\\\\\\  ",
        r" /\\\ ̲ ̲/\\\ ",
        r"\ \\\ \ \\\ ",
        r"\ \\\ \ \\\ ",
        r"\ \\\ \ \\\ ",
        r"\//\\\\\\\  ",
        r" \/ ̲ ̲ ̲ ̲ ̲/   ",
    ],
    "1": [
        r"       /\\\ ",
        r"     /\/\\\ ",
        r"   /̲\̲/\ \\\ ",
        r" / ̲/  \ \\\ ",
        r"      \ \\\ ",
        r"      \ \\\ ",
        r"      \/ ̲/  ",
    ],
    "2": [
        r" /\\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲/\\\ ",
        r"      \ \\\ ",
        r" /\\\\\\\\\ ",
        r"\ \\ ̲ ̲ ̲ ̲ ̲/  ",
        r"\ \\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲ ̲ ̲/  ",
    ],
    "3": [
        r" /\\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲/\\\ ",
        r"      \ \\\ ",
        r"  /\\\\\\\\ ",
        r" \/ ̲ ̲ ̲ ̲ ̲\\\ ",
        r" /\\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲ ̲ ̲/  ",
    ],
    "4": [
        r"       /\    ",
        r"     /\/     ",
        r"   /\/ /\    ",
        r" /\\\\\\\\\\ ",
        r"\ ̲ ̲ ̲ ̲ ̲\\\ ̲/  ",
        r"    \ \\\    ",
        r"    \/ ̲/     ",
    ],
    "5": [
        r" /\\\\\\\\\ ",
        r"\ \\\ ̲ ̲ ̲ ̲/  ",
        r"\ \\\       ",
        r"\ \\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲/\\\ ",
        r" /\\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲ ̲ ̲/  ",
    ],
    "6": [
        r" /\\\\\\\\\ ",
        r"\ \\\ ̲ ̲ ̲ ̲/  ",
        r"\ \\\       ",
        r"\ \\\\\\\\\ ",
        r"\ \\\  /\\\ ",
        r"\ \\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲ ̲ ̲/  ",
    ],
    "7": [
        r" /\\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲/\\\ ",
        r"      \ \\\ ",
        r"     /\\\\\ ",
        r"    \/ ̲/\\\ ",
        r"      \ \\\ ",
        r"      \/ ̲/  ",
    ],
    "8": [
        r" /\\\\\\\\\ ",
        r"\ \\\ ̲ ̲/\\\ ",
        r"\ \\\ \ \\\ ",
        r"\ \\\\\\\\\ ",
        r"\ \\\  /\\\ ",
        r"\ \\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲ ̲ ̲/  ",
    ],
    "9": [
        r" /\\\\\\\\\ ",
        r"\ \\\  /\\\ ",
        r"\ \\\\\\\\\ ",
        r"\/ ̲ ̲ ̲ ̲ ̲/\\\ ",
        r"      \ \\\ ",
        r"      \ \\\ ",
        r"      \/ ̲/  ",
    ],
    "∖": [
        r"      ",
        r" /\∖\ ",
        r"\/ ̲/  ",
        r"      ",
        r" /\∖\ ",
        r"\/ ̲/  ",
        r"      ",
    ],
    "\\": [
        r"      ",
        r" /\\\ ",
        r"\/ ̲/  ",
        r"      ",
        r" /\\\ ",
        r"\/ ̲/  ",
        r"      ",
    ],
    "|": [
        r"      ",
        r" /\|\ ",
        r"\/ ̲/  ",
        r"      ",
        r" /\|\ ",
        r"\/ ̲/  ",
        r"      ",
    ],
    "/": [
        r"      ",
        r" /\/\ ",
        r"\/ ̲/  ",
        r"      ",
        r" /\/\ ",
        r"\/ ̲/  ",
        r"      ",
    ],
    "-": [
        r"      ",
        r" /\-\ ",
        r"\/ ̲/  ",
        r"      ",
        r" /\-\ ",
        r"\/ ̲/  ",
        r"      ",
    ],
}
assert min(*[len(char) for char in font]) == max(
    *[len(char) for char in font]
), "Characters in font must have the same height"


def main(stdscr: curses.window, text: str = ""):
    curses.curs_set(0)

    if text:
        draw_text(stdscr, text)

    else:
        duration = 25 * 60
        draw_timer(stdscr, duration)


def draw_text(stdscr, text):
    while True:
        px, py = padding(text)

        stdscr.clear()
        stdscr.addstr(py, 0, draw(text, px))
        stdscr.refresh()
        time.sleep(1)


def draw_timer(stdscr, duration: int):
    while duration:
        formatted_duration = time.strftime("%M:%S", time.gmtime(duration))
        px, py = padding(formatted_duration)

        stdscr.clear()
        stdscr.addstr(py, 0, draw(formatted_duration, px))
        stdscr.refresh()
        time.sleep(1)
        duration -= 1


def padding(text):
    CHAR_WIDTH = max([len(char[0]) for char in font.values()])
    CHAR_HEIGHT = max([len(char) for char in font.values()])
    xpad = int(curses.COLS // 2 - CHAR_WIDTH * (len(text) or 5) // 2)
    ypad = int(curses.LINES // 2 - CHAR_HEIGHT // 2)
    return xpad, ypad


def draw(text: str, gap=0):
    global font
    px, _ = padding(text)

    text = ""
    for i in range(7):
        text += px * " "  # Left padding

        for char in text:
            if char == ":":
                match (int(time.time()) % 5):
                    case 0:
                        char = "∖"
                    case 1:
                        char = "\\"
                    case 2:
                        char = "|"
                    case 3:
                        char = "/"
                    case 4:
                        char = "-"
            text += font[char][i] + (gap * " ")
        text += "\n" + (i + 1) * " "
    return text


if __name__ == "__main__":
    args = sys.argv[1:]
    curses.wrapper(lambda stdscr: main(stdscr, *args))
